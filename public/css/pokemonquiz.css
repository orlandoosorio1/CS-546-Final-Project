
<main class="pokemon-who-quiz-container">
    <link rel="stylesheet" href="/public/css/pokemonquiz.css">

    <h1>Who's That PokÃ©mon?</h1>
    <p>Can you guess the PokÃ©mon based on its silhouette?</p>
    <div class="pokemon-image-container">
        <!-- Background Image -->
        <img 
            src="/public/images/whopoke2.png" 
            alt="Background Image" 
            class="pokemon-back"
        />

        <!-- Silhouette Image -->
        <img 
            id="pokemonSilhouette" 
            src="{{silhouetteUrl}}" 
            alt="PokÃ©mon Silhouette" 
            class="pokemon-silhouette"
        />
    </div>

    <!-- Quiz Answer Form -->
    <form id="pokemonAnswerForm" class="pokemon-answer-form">
        <label for="pokemonGuess" class="pokemon-guess-label">Your Answer:</label>
        <input 
            type="text" 
            id="pokemonGuess" 
            name="pokemonGuess" 
            placeholder="Enter PokÃ©mon Name" 
            >
        <button type="button" id="submitGuess" class="submit-button">Submit</button>
    </form>

    <div id="resultMessage" class="result-message"></div>
    <button id="playAgainButton" class="play-again-button" style="display: none;">Play Again</button>
</main>


<script>
    let correctPokemon = '';

    const pokemonSilhouette = document.getElementById('pokemonSilhouette');
    const pokemonGuessInput = document.getElementById('pokemonGuess');
    const submitGuessButton = document.getElementById('submitGuess');
    const resultMessage = document.getElementById('resultMessage');
    const playAgainButton = document.getElementById('playAgainButton');

    // Fetch and display a random PokÃ©mon
    const fetchRandomPokemon = async () => {
        try {
            const randomId = Math.floor(Math.random() * 151) + 1; // Original 151 PokÃ©mon
            const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${randomId}`);
            const pokemonData = await response.json();

            correctPokemon = pokemonData.name.toLowerCase();
            pokemonSilhouette.src = pokemonData.sprites.front_default;

            pokemonSilhouette.style.filter = 'brightness(0%)';
            resultMessage.textContent = '';
            resultMessage.style.color = '';
            playAgainButton.style.display = 'none';
        } catch (error) {
            console.error('Error fetching PokÃ©mon:', error);
        }
    };

    // Check the user's guess
    const checkGuess = () => {
        const userGuess = pokemonGuessInput.value.trim().toLowerCase();
        if (userGuess === correctPokemon) {
            resultMessage.textContent = 'Correct! ðŸŽ‰';
            resultMessage.style.color = 'green';
            pokemonSilhouette.style.filter = 'none';
            playAgainButton.style.display = 'block';
        } else {
            resultMessage.textContent = 'Wrong! Try again.';
            resultMessage.style.color = 'red';
        }
    };
    submitGuessButton.addEventListener('click', checkGuess);
    playAgainButton.addEventListener('click', fetchRandomPokemon);

    fetchRandomPokemon();
</script>
